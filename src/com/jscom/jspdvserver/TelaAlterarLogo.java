/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jscom.jspdvserver;

import com.sun.jdi.connect.spi.Connection;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/*import java.sql.Connection;*/
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;

/**
 *
 * @author Esc_Big03
 */
public class TelaAlterarLogo extends javax.swing.JFrame {

    /**
     * Creates new form TelaAlterarLogo
     */
    public TelaAlterarLogo() {
        initComponents();
    }
       Preferences prefs = Preferences.userNodeForPackage(ConfiguracaoBancoDados.class);
        String urlBanco = prefs.get("urlBanco", "");
        String host = prefs.get("host", "");
        String porta = prefs.get ("porta", "");
        String nomebd = prefs.get("nomeBanco","" );
        String usuario = prefs.get("usuario", "");
        String senha = prefs.get("senha", "");
        private File arquivoSelecionado; 
        
    private byte[] converterImagemParaBytes(File arquivoImagem) throws IOException {
    FileInputStream fis = new FileInputStream(arquivoImagem);
    byte[] bytesImagem = new byte[(int) arquivoImagem.length()];
    fis.read(bytesImagem);
    fis.close();
    return bytesImagem;
}
    private void exibirImagem(File arquivo) {
    try {
        FileInputStream fis = new FileInputStream(arquivo);
        byte[] bytesImagem = new byte[(int) arquivo.length()];
        fis.read(bytesImagem);
        fis.close();

        ImageIcon imagemIcon = new ImageIcon(bytesImagem);
        Image imagem = imagemIcon.getImage();
        Image novaImagem = imagem.getScaledInstance(jLabelImagem.getWidth(), jLabelImagem.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon novaImagemIcon = new ImageIcon(novaImagem);

        // Exibir a imagem no JLabel
        jLabelImagem.setIcon(novaImagemIcon);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao exibir a imagem: " + e.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selcImg = new javax.swing.JLabel();
        btnAbrirSeletor = new javax.swing.JButton();
        btnSalvarImagem = new javax.swing.JButton();
        jLabelImagem = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selcImg.setText("SELECIONAR IMAGEM:");

        btnAbrirSeletor.setText("SELECIONAR");
        btnAbrirSeletor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirSeletorActionPerformed(evt);
            }
        });

        btnSalvarImagem.setText("SALVAR");
        btnSalvarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarImagemActionPerformed(evt);
            }
        });

        jButton1.setText("VOLTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(selcImg)
                        .addGap(18, 18, 18)
                        .addComponent(btnAbrirSeletor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(btnSalvarImagem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jLabelImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selcImg)
                    .addComponent(btnAbrirSeletor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabelImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnSalvarImagem)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirSeletorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirSeletorActionPerformed
        JFileChooser chooser = new JFileChooser();
    chooser.setDialogTitle("Selecionar Imagem");
    int resultado = chooser.showOpenDialog(this);

    if (resultado == JFileChooser.APPROVE_OPTION) {
        arquivoSelecionado = chooser.getSelectedFile();

        // Exibir a imagem selecionada ao usu√°rio
        exibirImagem(arquivoSelecionado);
    }
    }//GEN-LAST:event_btnAbrirSeletorActionPerformed

    private void btnSalvarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarImagemActionPerformed
   if (arquivoSelecionado != null) {
        try {
            byte[] bytesImagem = converterImagemParaBytes(arquivoSelecionado);
            java.sql.Connection conexao = DriverManager.getConnection(urlBanco, usuario, senha);
            String sql = "UPDATE loja SET logo = ? WHERE id = 1"; // Supondo que a loja tenha um ID de 1
            PreparedStatement stmt = conexao.prepareStatement(sql);
            stmt.setBytes(1, bytesImagem);
            stmt.executeUpdate();
            stmt.close();
            conexao.close();

            // A imagem da loja foi atualizada no banco de dados
            JOptionPane.showMessageDialog(this, "Imagem da loja atualizada com sucesso.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar a imagem da loja: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Nenhuma imagem selecionada.");
    }
    }//GEN-LAST:event_btnSalvarImagemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
               TelaInicial telainicial = new TelaInicial();
               telainicial.setLocationRelativeTo(null); // Centralize a tela
               telainicial.setVisible(true);
               dispose(); // Feche a tela de login
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarLogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarLogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarLogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAlterarLogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAlterarLogo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirSeletor;
    private javax.swing.JButton btnSalvarImagem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabelImagem;
    private javax.swing.JLabel selcImg;
    // End of variables declaration//GEN-END:variables
}
